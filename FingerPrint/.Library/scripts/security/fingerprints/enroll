#!/usr/bin/php
<?php

declare(strict_types=1);

use Phoundation\Accounts\Users\User;
use Phoundation\Accounts\Users\Users;
use Phoundation\Cli\Documentation;
use Phoundation\Data\Validator\ArgvValidator;
use Plugins\FingerPrint\FingerPrint;


/**
 * Script security/fingerprints/enroll
 *
 * This script will enroll a new fingerprint in the database.
 *
 * @author Sven Olaf Oostenbrink <so.oostenbrink@gmail.com>
 * @license http://opensource.org/licenses/GPL-2.0 GNU Public License, Version 2
 * @copyright Copyright (c) 2022 Sven Olaf Oostenbrink <so.oostenbrink@gmail.com>
 * @package Phoundation\Scripts
 */
Documentation::usage('./pho security fingerprints enroll -u EMAIL');

Documentation::help('This script will enroll a new fingerprint in the database. The user which will have his / her 
fingerprints enrolled in the database must already exist


ARGUMENTS


-u / --user EMAIL                       The user who\'s fingerprints will be enrolled in the database');

Documentation::autoComplete(User::getAutoComplete([
    'positions' => [
        0 => [
            'word'   => 'SELECT `email` FROM `accounts_users` WHERE `email` LIKE :word AND `status` IS NULL',
            'noword' => 'SELECT `email` FROM `accounts_users` WHERE `status` IS NULL'
        ]
    ],
]));


// Validate arguments
$argv = ArgvValidator::new()
    ->select('-u,--user', true)->isEmail()
    ->validate();

$user = User::get($argv['user'], 'email');

FingerPrint::new()->enroll($user);
